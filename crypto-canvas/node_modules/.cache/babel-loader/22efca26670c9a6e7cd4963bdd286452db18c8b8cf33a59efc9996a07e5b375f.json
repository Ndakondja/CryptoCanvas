{"ast":null,"code":"import axios from 'axios';\nimport config from './config';\nimport * as d3 from 'd3';\nexport default {\n  name: 'MarketCapTreeMap',\n  data() {\n    return {\n      marketCapData: []\n    };\n  },\n  props: {\n    selectedTimeRange: String,\n    selectedCoins: Array\n  },\n  mounted() {\n    this.fetchMarketCapData(this.selectedTimeRange, this.selectedCoins);\n  },\n  watch: {\n    selectedTimeRange() {\n      this.fetchMarketCapData(this.selectedTimeRange, this.selectedCoins);\n    },\n    selectedCoins() {\n      this.fetchMarketCapData(this.selectedTimeRange, this.selectedCoins);\n    }\n  },\n  methods: {\n    async fetchMarketCapData() {\n      try {\n        const response = await axios.get(`${config.backendApiUrl}/getMarketCapData`, {\n          params: {\n            timeRange: this.selectedTimeRange,\n            coins: this.selectedCoins.join(',')\n          }\n        });\n        this.marketCapData = response.data;\n        this.drawBarChart(this.selectedTimeRange, this.selectedCoins);\n      } catch (error) {\n        console.error('Error fetching market cap data:', error);\n      }\n    },\n    normalizeData(data) {\n      const maxMarketCap = d3.max(data, d => d.marketCap);\n      return data.map(d => ({\n        ...d,\n        normalizedMarketCap: d.marketCap / maxMarketCap\n      }));\n    },\n    drawBarChart() {\n      const data = this.marketCapData;\n      const margin = {\n        top: 20,\n        right: 30,\n        bottom: 40,\n        left: 50\n      };\n      const width = 800 - margin.left - margin.right;\n      const height = 500 - margin.top - margin.bottom;\n      const svg = d3.select('#market-cap-bar-chart').append('svg').attr('width', width + margin.left + margin.right).attr('height', height + margin.top + margin.bottom).append('g').attr('transform', `translate(${margin.left},${margin.top})`);\n      const x = d3.scaleBand().range([0, width]).domain(data.map(d => d.coin)).padding(0.1);\n      const y = d3.scaleLinear().range([height, 0]).domain([0, 1]);\n      svg.append('g').attr('transform', `translate(0,${height})`).call(d3.axisBottom(x));\n      svg.append('g').call(d3.axisLeft(y));\n      svg.selectAll('.bar').data(data).enter().append('rect').attr('class', 'bar').attr('x', d => x(d.coin)).attr('width', x.bandwidth()).attr('y', d => y(d.normalizedMarketCap)).attr('height', d => height - y(d.normalizedMarketCap)).style('fill', 'steelblue');\n    }\n  }\n};","map":{"version":3,"names":["axios","config","d3","name","data","marketCapData","props","selectedTimeRange","String","selectedCoins","Array","mounted","fetchMarketCapData","watch","methods","response","get","backendApiUrl","params","timeRange","coins","join","drawBarChart","error","console","normalizeData","maxMarketCap","max","d","marketCap","map","normalizedMarketCap","margin","top","right","bottom","left","width","height","svg","select","append","attr","x","scaleBand","range","domain","coin","padding","y","scaleLinear","call","axisBottom","axisLeft","selectAll","enter","bandwidth","style"],"sources":["/Users/stefanstapelberg/Desktop/FSD_PROJECT/CryptoCanvas/crypto-canvas/src/components/MarketCapTreeMap.vue"],"sourcesContent":["<template>\n    <div>\n      <h2>Market Capitalization Treemap</h2>\n      <div id=\"market-cap-treemap\"></div> <!-- Container for the D3.js treemap -->\n    </div>\n  </template>\n\n<script>\nimport axios from 'axios'\nimport config from './config'\nimport * as d3 from 'd3'\n\nexport default {\n  name: 'MarketCapTreeMap',\n  data () {\n    return {\n      marketCapData: []\n    }\n  },\n  props: {\n    selectedTimeRange: String,\n    selectedCoins: Array\n  },\n  mounted () {\n    this.fetchMarketCapData(this.selectedTimeRange, this.selectedCoins)\n  },\n  watch: {\n    selectedTimeRange () {\n      this.fetchMarketCapData(this.selectedTimeRange, this.selectedCoins)\n    },\n    selectedCoins () {\n      this.fetchMarketCapData(this.selectedTimeRange, this.selectedCoins)\n    }\n  },\n  methods: {\n    async fetchMarketCapData () {\n      try {\n        const response = await axios.get(`${config.backendApiUrl}/getMarketCapData`, {\n          params: {\n            timeRange: this.selectedTimeRange,\n            coins: this.selectedCoins.join(',')\n          }\n        })\n        this.marketCapData = response.data\n        this.drawBarChart(this.selectedTimeRange, this.selectedCoins)\n      } catch (error) {\n        console.error('Error fetching market cap data:', error)\n      }\n    },\n    normalizeData(data) {\n      const maxMarketCap = d3.max(data, d => d.marketCap);\n      return data.map(d => ({\n        ...d,\n        normalizedMarketCap: d.marketCap / maxMarketCap\n      }));\n    },\n    drawBarChart() {\n        const data = this.marketCapData;\n        const margin = { top: 20, right: 30, bottom: 40, left: 50 };\n        const width = 800 - margin.left - margin.right;\n        const height = 500 - margin.top - margin.bottom;\n\n        const svg = d3.select('#market-cap-bar-chart')\n            .append('svg')\n            .attr('width', width + margin.left + margin.right)\n            .attr('height', height + margin.top + margin.bottom)\n            .append('g')\n            .attr('transform', `translate(${margin.left},${margin.top})`);\n\n        const x = d3.scaleBand()\n            .range([0, width])\n         .domain(data.map(d => d.coin))\n         .padding(0.1);\n\n        const y = d3.scaleLinear()\n            .range([height, 0])\n            .domain([0, 1]);\n\n        svg.append('g')\n            .attr('transform', `translate(0,${height})`)\n         .call(d3.axisBottom(x));\n\n        svg.append('g')\n            .call(d3.axisLeft(y))\n\n        svg.selectAll('.bar')\n            .data(data)\n            .enter().append('rect')\n            .attr('class', 'bar')\n            .attr('x', d => x(d.coin))\n            .attr('width', x.bandwidth())\n            .attr('y', d => y(d.normalizedMarketCap))\n         .attr('height', d => height - y(d.normalizedMarketCap))\n         .style('fill', 'steelblue')\n    }\n    \n  }\n}\n</script>\n\n<style>\n/* Style your bar chart here */\n#market-cap-bar-chart svg {\n  font-family: 'Arial', sans-serif;\n}\n.bar {\n  stroke: #ffffff;\n  stroke-width: 1px;\n}\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}