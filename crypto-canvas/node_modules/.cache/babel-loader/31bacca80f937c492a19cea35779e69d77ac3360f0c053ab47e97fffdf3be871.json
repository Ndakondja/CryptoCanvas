{"ast":null,"code":"import axios from 'axios';\nimport config from './config';\nexport default {\n  name: 'CoinStats',\n  props: {\n    selectedTimeRange: String,\n    selectedCoins: {\n      type: Array\n    }\n  },\n  mounted() {\n    this.fetchCoinStats(this.selectedTimeRange, this.selectedCoins);\n  },\n  data() {\n    return {\n      coinStats: []\n    };\n  },\n  watch: {\n    selectedTimeRange() {\n      this.fetchCoinStats(this.selectedTimeRange, this.selectedCoins);\n    },\n    selectedCoins() {\n      this.fetchCoinStats(this.selectedTimeRange, this.selectedCoins);\n    }\n  },\n  methods: {\n    async fetchCoinStats() {\n      try {\n        const response = await axios.get(`${config.backendApiUrl}/getCoinStats`, {\n          params: {\n            timeRange: this.selectedTimeRange,\n            coins: this.selectedCoins.join(',')\n          }\n        });\n        this.coinStats = response.data;\n      } catch (error) {\n        console.error('Error fetching coin stats:', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","config","name","props","selectedTimeRange","String","selectedCoins","type","Array","mounted","fetchCoinStats","data","coinStats","watch","methods","response","get","backendApiUrl","params","timeRange","coins","join","error","console"],"sources":["C:\\Projects\\CryptoCanvas\\crypto-canvas\\src\\components\\CoinStats.vue"],"sourcesContent":["<template>\r\n    <div id=\"coin-stats\">\r\n      <h2>Quick Coin Stats</h2>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Coin</th>\r\n            <th>Average Price</th>\r\n            <th>Standard Deviation</th>\r\n            <th>Percentage Growth</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"coinStat in coinStats\" :key=\"coinStat.coin\">\r\n            <td>{{ coinStat.coin }}</td>\r\n            <td>{{ coinStat.average_price.toFixed(2) }}</td>\r\n            <td>{{ coinStat.std_dev.toFixed(2) }}%</td>\r\n            <td>{{ coinStat.percentage_growth.toFixed(2) }}%</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\nimport config from './config'\r\n\r\nexport default {\r\n  name: 'CoinStats',\r\n  props: {\r\n    selectedTimeRange: String,\r\n    selectedCoins: {\r\n      type: Array\r\n    }\r\n  },\r\n  mounted () {\r\n    this.fetchCoinStats(this.selectedTimeRange, this.selectedCoins)\r\n  },\r\n  data () {\r\n    return {\r\n      coinStats: []\r\n    }\r\n  },\r\n  watch: {\r\n    selectedTimeRange () {\r\n      this.fetchCoinStats(this.selectedTimeRange, this.selectedCoins)\r\n    },\r\n    selectedCoins () {\r\n      this.fetchCoinStats(this.selectedTimeRange, this.selectedCoins)\r\n    }\r\n  },\r\n  methods: {\r\n    async fetchCoinStats () {\r\n      try {\r\n        const response = await axios.get(`${config.backendApiUrl}/getCoinStats`, {\r\n          params: {\r\n            timeRange: this.selectedTimeRange,\r\n            coins: this.selectedCoins.join(',')\r\n          }\r\n        })\r\n        this.coinStats = response.data\r\n      } catch (error) {\r\n        console.error('Error fetching coin stats:', error)\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n/* Add styling for your table here */\r\ntable {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  background-color: rgba(69, 31, 152, 0.241); /* Blue background color */\r\n}\r\n\r\nth, td {\r\n  border: 2px solid rgba(45, 19, 101, 0.111); /* Darker gridlines */\r\n  padding: 8px;\r\n}\r\n\r\nth {\r\n  background-color: rgba(69, 31, 152, 0.185); /* Slightly darker blue for header */\r\n}\r\n\r\n/* Grid layout adjustments */\r\n.main-content-grid {\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr; /* Two equal columns */\r\n  grid-template-rows: auto;\r\n  gap: 16px; /* Adjust the gap as needed */\r\n}\r\n\r\n.main-content-grid > div {\r\n  grid-column: 1 / -1; /* Make other content span full width */\r\n}\r\n\r\n.main-content-grid > div:nth-child(1) {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.coin-stats {\r\n  grid-column: 2; /* Place in the second column */\r\n  max-width: 50%; /* Half the width of the column */\r\n  align-self: start; /* Align to the top */\r\n}\r\n\r\n.statistics-container {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  /* Add more styles for positioning if necessary */\r\n}\r\n\r\n.coin-statistics {\r\n  width: 48%; /* Adjust width as necessary */\r\n  /* Adjust other styling as necessary */\r\n}\r\n\r\n.icon {\r\n  padding-right: 8px; /* Adjust spacing as necessary */\r\n}\r\n\r\n</style>\r\n"],"mappings":"AAyBA,OAAOA,KAAI,MAAO,OAAM;AACxB,OAAOC,MAAK,MAAO,UAAS;AAE5B,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,KAAK,EAAE;IACLC,iBAAiB,EAAEC,MAAM;IACzBC,aAAa,EAAE;MACbC,IAAI,EAAEC;IACR;EACF,CAAC;EACDC,OAAMA,CAAA,EAAK;IACT,IAAI,CAACC,cAAc,CAAC,IAAI,CAACN,iBAAiB,EAAE,IAAI,CAACE,aAAa;EAChE,CAAC;EACDK,IAAGA,CAAA,EAAK;IACN,OAAO;MACLC,SAAS,EAAE;IACb;EACF,CAAC;EACDC,KAAK,EAAE;IACLT,iBAAgBA,CAAA,EAAK;MACnB,IAAI,CAACM,cAAc,CAAC,IAAI,CAACN,iBAAiB,EAAE,IAAI,CAACE,aAAa;IAChE,CAAC;IACDA,aAAYA,CAAA,EAAK;MACf,IAAI,CAACI,cAAc,CAAC,IAAI,CAACN,iBAAiB,EAAE,IAAI,CAACE,aAAa;IAChE;EACF,CAAC;EACDQ,OAAO,EAAE;IACP,MAAMJ,cAAaA,CAAA,EAAK;MACtB,IAAI;QACF,MAAMK,QAAO,GAAI,MAAMf,KAAK,CAACgB,GAAG,CAAE,GAAEf,MAAM,CAACgB,aAAc,eAAc,EAAE;UACvEC,MAAM,EAAE;YACNC,SAAS,EAAE,IAAI,CAACf,iBAAiB;YACjCgB,KAAK,EAAE,IAAI,CAACd,aAAa,CAACe,IAAI,CAAC,GAAG;UACpC;QACF,CAAC;QACD,IAAI,CAACT,SAAQ,GAAIG,QAAQ,CAACJ,IAAG;MAC/B,EAAE,OAAOW,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK;MACnD;IACF;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}