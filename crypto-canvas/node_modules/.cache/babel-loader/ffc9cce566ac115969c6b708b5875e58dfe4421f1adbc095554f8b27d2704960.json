{"ast":null,"code":"import * as d3 from 'd3';\nimport axios from 'axios';\nimport config from './config';\nexport default {\n  // eslint-disable-next-line vue/multi-word-component-names\n  name: 'Volatility',\n  data() {\n    return {\n      selected_coins: ['Cardano', 'XRP', 'Litecoin', 'Ethereum', 'Bitcoin'],\n      // Default selected coins\n      volatilityData: null\n    };\n  },\n  mounted() {\n    this.fetchVolatilityData();\n  },\n  methods: {\n    async fetchVolatilityData() {\n      try {\n        const response = await axios.get(config.backendApiUrl.concat('/getCoinVolatilityComparisons'));\n        this.drawVolatilityChart(response.data);\n      } catch (error) {\n        console.error('Error fetching volatility data:', error);\n      }\n    },\n    drawVolatilityChart(data) {\n      // Parse data\n      // Define color scale for the coins\n      const colorScale = d3.scaleOrdinal(d3.schemeCategory10);\n\n      // Process data into groups by coin\n      const dataGroups = this.selected_coins.map(coin => ({\n        name: coin,\n        values: data.filter(d => d.Coin === coin).sort((a, b) => d3.ascending(a.date, b.date))\n      }));\n\n      // Define dimensions and margins\n      const margin = {\n        top: 10,\n        right: 80,\n        bottom: 30,\n        left: 50\n      };\n      const width = 960 - margin.left - margin.right;\n      const height = 500 - margin.top - margin.bottom;\n\n      // Remove any existing SVG to avoid overlapping charts\n      d3.select('#volatility-chart').select('svg').remove();\n\n      // Append the svg object\n      const svg = d3.select('#volatility-chart').append('svg').attr('width', width + margin.left + margin.right).attr('height', height + margin.top + margin.bottom).append('g').attr('transform', `translate(${margin.left},${margin.top})`);\n\n      // Parse dates and values from the data\n      const parseTime = d3.timeParse('%a, %d %b %Y %H:%M:%S GMT');\n      data.forEach(d => {\n        d.date = parseTime(d.Date); // Parse the date\n        d.Volatility = +d.Volatility; // Convert Volatility to number\n      });\n\n      // Add X & Y scales and axes\n      const x = d3.scaleTime().range([0, width]);\n      const y = d3.scaleLinear().range([height, 0]);\n\n      // Scale the range of the data\n      x.domain(d3.extent(data, d => d.date));\n      y.domain([0, d3.max(data, d => d.Volatility)]);\n\n      // Define the line\n      const valueline = d3.line().x(d => x(d.date)).y(d => y(d.Volatility));\n\n      // Add the X Axis\n      svg.append('g').attr('transform', `translate(0,${height})`).call(d3.axisBottom(x));\n\n      // Add the Y Axis\n      svg.append('g').call(d3.axisLeft(y));\n\n      // Draw the line for each group\n      dataGroups.forEach(group => {\n        svg.append('path').data([group.values]).attr('class', 'line').attr('d', valueline).style('stroke', () => colorScale(group.name));\n      });\n\n      // Add tooltip\n      const tooltip = d3.select('#volatility-chart').append('div').style('opacity', 0).attr('class', 'tooltip').style('background-color', 'white').style('border', 'solid').style('border-width', '2px').style('border-radius', '5px').style('padding', '5px').style('position', 'absolute');\n\n      // Tooltip event handlers\n      const mouseover = function (event, d) {\n        tooltip.style('opacity', 1);\n        d3.select(this).style('stroke', 'black');\n      };\n      const mousemove = function (event, d) {\n        if (d.date) {\n          tooltip.html('Date: ' + d.date.toISOString().substring(0, 10) + '<br>Volatility: ' + d.value.toFixed(2)).style('left', event.x / 2 + 'px').style('top', event.y / 2 - 30 + 'px');\n        }\n      };\n      const mouseleave = function (event, d) {\n        tooltip.style('opacity', 0);\n        d3.select(this).style('stroke', 'none');\n      };\n\n      // Add the points with tooltips\n      svg.selectAll('dot').data(data).enter().append('circle').attr('r', 5).attr('cx', d => x(d.date)).attr('cy', d => y(d.value)).on('mouseover', mouseover).on('mousemove', mousemove).on('mouseleave', mouseleave);\n    }\n  }\n};","map":{"version":3,"names":["d3","axios","config","name","data","selected_coins","volatilityData","mounted","fetchVolatilityData","methods","response","get","backendApiUrl","concat","drawVolatilityChart","error","console","colorScale","scaleOrdinal","schemeCategory10","dataGroups","map","coin","values","filter","d","Coin","sort","a","b","ascending","date","margin","top","right","bottom","left","width","height","select","remove","svg","append","attr","parseTime","timeParse","forEach","Date","Volatility","x","scaleTime","range","y","scaleLinear","domain","extent","max","valueline","line","call","axisBottom","axisLeft","group","style","tooltip","mouseover","event","mousemove","html","toISOString","substring","value","toFixed","mouseleave","selectAll","enter","on"],"sources":["C:\\Projects\\CryptoCanvas\\crypto-canvas\\src\\components\\VolatilityComparison.vue"],"sourcesContent":["<template>\n  <div id=\"volatility-chart\"></div>\n</template>\n\n<script>\nimport * as d3 from 'd3'\nimport axios from 'axios'\nimport config from './config'\n\nexport default {\n  // eslint-disable-next-line vue/multi-word-component-names\n  name: 'Volatility',\n  data () {\n    return {\n      selected_coins: ['Cardano', 'XRP', 'Litecoin', 'Ethereum', 'Bitcoin'], // Default selected coins\n      volatilityData: null\n    }\n  },\n  mounted () {\n    this.fetchVolatilityData()\n  },\n  methods: {\n    async fetchVolatilityData () {\n      try {\n        const response = await axios.get(config.backendApiUrl.concat('/getCoinVolatilityComparisons'))\n        this.drawVolatilityChart(response.data)\n      } catch (error) {\n        console.error('Error fetching volatility data:', error)\n      }\n    },\n    drawVolatilityChart (data) {\n      // Parse data\n    // Define color scale for the coins\n      const colorScale = d3.scaleOrdinal(d3.schemeCategory10)\n\n      // Process data into groups by coin\n      const dataGroups = this.selected_coins.map(coin => ({\n        name: coin,\n        values: data.filter(d => d.Coin === coin).sort((a, b) => d3.ascending(a.date, b.date))\n      }))\n\n      // Define dimensions and margins\n      const margin = { top: 10, right: 80, bottom: 30, left: 50 }\n      const width = 960 - margin.left - margin.right\n      const height = 500 - margin.top - margin.bottom\n\n      // Remove any existing SVG to avoid overlapping charts\n      d3.select('#volatility-chart').select('svg').remove()\n\n      // Append the svg object\n      const svg = d3.select('#volatility-chart')\n        .append('svg')\n        .attr('width', width + margin.left + margin.right)\n        .attr('height', height + margin.top + margin.bottom)\n        .append('g')\n        .attr('transform', `translate(${margin.left},${margin.top})`)\n\n      // Parse dates and values from the data\n      const parseTime = d3.timeParse('%a, %d %b %Y %H:%M:%S GMT')\n      data.forEach(d => {\n        d.date = parseTime(d.Date) // Parse the date\n        d.Volatility = +d.Volatility // Convert Volatility to number\n      })\n\n      // Add X & Y scales and axes\n      const x = d3.scaleTime().range([0, width])\n      const y = d3.scaleLinear().range([height, 0])\n\n      // Scale the range of the data\n      x.domain(d3.extent(data, d => d.date))\n      y.domain([0, d3.max(data, d => d.Volatility)])\n\n      // Define the line\n      const valueline = d3.line()\n        .x(d => x(d.date))\n        .y(d => y(d.Volatility))\n\n      // Add the X Axis\n      svg.append('g')\n        .attr('transform', `translate(0,${height})`)\n        .call(d3.axisBottom(x))\n\n      // Add the Y Axis\n      svg.append('g')\n        .call(d3.axisLeft(y))\n\n      // Draw the line for each group\n      dataGroups.forEach(group => {\n        svg.append('path')\n          .data([group.values])\n          .attr('class', 'line')\n          .attr('d', valueline)\n          .style('stroke', () => colorScale(group.name))\n      })\n\n      // Add tooltip\n      const tooltip = d3.select('#volatility-chart')\n        .append('div')\n        .style('opacity', 0)\n        .attr('class', 'tooltip')\n        .style('background-color', 'white')\n        .style('border', 'solid')\n        .style('border-width', '2px')\n        .style('border-radius', '5px')\n        .style('padding', '5px')\n        .style('position', 'absolute')\n\n      // Tooltip event handlers\n      const mouseover = function (event, d) {\n        tooltip.style('opacity', 1)\n        d3.select(this).style('stroke', 'black')\n      }\n\n      const mousemove = function (event, d) {\n        if (d.date) {\n          tooltip.html('Date: ' + d.date.toISOString().substring(0, 10) + '<br>Volatility: ' + d.value.toFixed(2))\n            .style('left', (event.x / 2) + 'px')\n            .style('top', (event.y / 2 - 30) + 'px')\n        }\n      }\n\n      const mouseleave = function (event, d) {\n        tooltip.style('opacity', 0)\n        d3.select(this).style('stroke', 'none')\n      }\n\n      // Add the points with tooltips\n      svg.selectAll('dot')\n        .data(data)\n        .enter().append('circle')\n        .attr('r', 5)\n        .attr('cx', d => x(d.date))\n        .attr('cy', d => y(d.value))\n        .on('mouseover', mouseover)\n        .on('mousemove', mousemove)\n        .on('mouseleave', mouseleave)\n    }\n  }\n}\n</script>\n\n<style>\n/* Add styles for your chart and tooltip */\n.tooltip {\n  position: absolute;\n  text-align: center;\n  transition: opacity 0.3s;\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}