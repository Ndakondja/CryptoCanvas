{"ast":null,"code":"import * as d3 from 'd3';\nimport axios from 'axios';\nimport config from './config';\nexport default {\n  // eslint-disable-next-line vue/multi-word-component-names\n  name: 'Volatility',\n  data() {\n    return {\n      selected_coins: ['Cardano', 'XRP', 'Litecoin', 'Ethereum', 'Bitcoin'],\n      // Default selected coins\n      volatilityData: null\n    };\n  },\n  mounted() {\n    this.fetchVolatilityData();\n  },\n  methods: {\n    async fetchVolatilityData() {\n      try {\n        const response = await axios.get(config.backendApiUrl.concat('/getCoinVolatilityComparisons'));\n        this.drawVolatilityChart(response.data);\n      } catch (error) {\n        console.error('Error fetching volatility data:', error);\n      }\n    },\n    drawVolatilityChart(data) {\n      // Parse data\n      const parseTime = d3.timeParse('%a, %d %b %Y %H:%M:%S GMT');\n\n      // Assuming 'data' is an array of objects where each object has a 'Date', 'Volatility', and 'coin' property\n      // First, convert dates from string to Date objects and volatility to numbers\n      data.forEach(d => {\n        d.date = parseTime(d.Date);\n        d.value = +d.Volatility;\n      });\n\n      // Define dimensions and margins\n      const margin = {\n        top: 10,\n        right: 80,\n        bottom: 30,\n        left: 50\n      };\n      const width = 960 - margin.left - margin.right;\n      const height = 500 - margin.top - margin.bottom;\n\n      // Remove any existing SVG to avoid overlapping charts\n      d3.select('#volatility-chart').select('svg').remove();\n\n      // Append the svg object\n      const svg = d3.select('#volatility-chart').append('svg').attr('width', width + margin.left + margin.right).attr('height', height + margin.top + margin.bottom).append('g').attr('transform', `translate(${margin.left},${margin.top})`);\n\n      // Add X & Y scales and axes\n      const x = d3.scaleTime().range([0, width]);\n      const y = d3.scaleLinear().range([height, 0]);\n\n      // Scale the range of the data\n      x.domain(d3.extent(data, d => d.date));\n      y.domain([0, d3.max(data, d => d.value)]);\n\n      // Define the line generator\n      const valueline = d3.line().x(d => x(d.date)).y(d => y(d.value));\n\n      // Color scale for different coins\n      const color = d3.scaleOrdinal(d3.schemeCategory10).domain(this.selected_coins);\n\n      // Draw lines for each coin\n      this.selected_coins.forEach((coin, index) => {\n        svg.append('path').datum(data.filter(d => d.coin === coin)).attr('fill', 'none').attr('stroke', color(coin)).attr('stroke-width', 2).attr('d', valueline);\n      });\n\n      // Add the X Axis\n      svg.append('g').attr('transform', `translate(0,${height})`).call(d3.axisBottom(x));\n\n      // Add the Y Axis\n      svg.append('g').call(d3.axisLeft(y));\n\n      // Tooltip div\n      const tooltip = d3.select('#volatility-chart').append('div').style('opacity', 0).attr('class', 'tooltip').style('background-color', 'white').style('border', 'solid').style('border-width', '2px').style('border-radius', '5px').style('padding', '5px').style('position', 'absolute');\n\n      // Tooltip event handlers\n      const mouseover = function (event, d) {\n        tooltip.style('opacity', 1);\n        d3.select(this).style('stroke', 'black').style('opacity', 1);\n      };\n      const mousemove = function (event, d) {\n        tooltip.html('Date: ' + d.date.toISOString().substring(0, 10) + '<br>Volatility: ' + d.value.toFixed(2)).style('left', event.pageX + 10 + 'px').style('top', event.pageY + 10 + 'px');\n      };\n      const mouseleave = function (event, d) {\n        tooltip.style('opacity', 0);\n        d3.select(this).style('stroke', 'none').style('opacity', 0.8);\n      };\n\n      // Add the points with tooltips for each coin\n      this.selected_coins.forEach(coin => {\n        svg.selectAll('dot').data(data.filter(d => d.coin === coin)).enter().append('circle').attr('r', 5).attr('cx', d => x(d.date)).attr('cy', d => y(d.value)).style('fill', color(coin)).on('mouseover', mouseover).on('mousemove', mousemove).on('mouseleave', mouseleave);\n      });\n    }\n  }\n};","map":{"version":3,"names":["d3","axios","config","name","data","selected_coins","volatilityData","mounted","fetchVolatilityData","methods","response","get","backendApiUrl","concat","drawVolatilityChart","error","console","parseTime","timeParse","forEach","d","date","Date","value","Volatility","margin","top","right","bottom","left","width","height","select","remove","svg","append","attr","x","scaleTime","range","y","scaleLinear","domain","extent","max","valueline","line","color","scaleOrdinal","schemeCategory10","coin","index","datum","filter","call","axisBottom","axisLeft","tooltip","style","mouseover","event","mousemove","html","toISOString","substring","toFixed","pageX","pageY","mouseleave","selectAll","enter","on"],"sources":["C:\\Projects\\CryptoCanvas\\crypto-canvas\\src\\components\\VolatilityComparison.vue"],"sourcesContent":["<template>\n  <div id=\"volatility-chart\"></div>\n</template>\n\n<script>\nimport * as d3 from 'd3'\nimport axios from 'axios'\nimport config from './config'\n\nexport default {\n  // eslint-disable-next-line vue/multi-word-component-names\n  name: 'Volatility',\n  data () {\n    return {\n      selected_coins: ['Cardano', 'XRP', 'Litecoin', 'Ethereum', 'Bitcoin'], // Default selected coins\n      volatilityData: null\n    }\n  },\n  mounted () {\n    this.fetchVolatilityData()\n  },\n  methods: {\n    async fetchVolatilityData () {\n      try {\n        const response = await axios.get(config.backendApiUrl.concat('/getCoinVolatilityComparisons'))\n        this.drawVolatilityChart(response.data)\n      } catch (error) {\n        console.error('Error fetching volatility data:', error)\n      }\n    },\n    drawVolatilityChart (data) {\n      // Parse data\n      const parseTime = d3.timeParse('%a, %d %b %Y %H:%M:%S GMT')\n\n      // Assuming 'data' is an array of objects where each object has a 'Date', 'Volatility', and 'coin' property\n      // First, convert dates from string to Date objects and volatility to numbers\n      data.forEach(d => {\n        d.date = parseTime(d.Date)\n        d.value = +d.Volatility\n      })\n\n      // Define dimensions and margins\n      const margin = { top: 10, right: 80, bottom: 30, left: 50 }\n      const width = 960 - margin.left - margin.right\n      const height = 500 - margin.top - margin.bottom\n\n      // Remove any existing SVG to avoid overlapping charts\n      d3.select('#volatility-chart').select('svg').remove()\n\n      // Append the svg object\n      const svg = d3.select('#volatility-chart')\n        .append('svg')\n        .attr('width', width + margin.left + margin.right)\n        .attr('height', height + margin.top + margin.bottom)\n        .append('g')\n        .attr('transform', `translate(${margin.left},${margin.top})`)\n\n      // Add X & Y scales and axes\n      const x = d3.scaleTime().range([0, width])\n      const y = d3.scaleLinear().range([height, 0])\n\n      // Scale the range of the data\n      x.domain(d3.extent(data, d => d.date))\n      y.domain([0, d3.max(data, d => d.value)])\n\n      // Define the line generator\n      const valueline = d3.line()\n        .x(d => x(d.date))\n        .y(d => y(d.value))\n\n      // Color scale for different coins\n      const color = d3.scaleOrdinal(d3.schemeCategory10)\n        .domain(this.selected_coins)\n\n      // Draw lines for each coin\n      this.selected_coins.forEach((coin, index) => {\n        svg.append('path')\n          .datum(data.filter(d => d.coin === coin))\n          .attr('fill', 'none')\n          .attr('stroke', color(coin))\n          .attr('stroke-width', 2)\n          .attr('d', valueline)\n      })\n\n      // Add the X Axis\n      svg.append('g')\n        .attr('transform', `translate(0,${height})`)\n        .call(d3.axisBottom(x))\n\n      // Add the Y Axis\n      svg.append('g')\n        .call(d3.axisLeft(y))\n\n      // Tooltip div\n      const tooltip = d3.select('#volatility-chart')\n        .append('div')\n        .style('opacity', 0)\n        .attr('class', 'tooltip')\n        .style('background-color', 'white')\n        .style('border', 'solid')\n        .style('border-width', '2px')\n        .style('border-radius', '5px')\n        .style('padding', '5px')\n        .style('position', 'absolute')\n\n      // Tooltip event handlers\n      const mouseover = function (event, d) {\n        tooltip.style('opacity', 1)\n        d3.select(this).style('stroke', 'black').style('opacity', 1)\n      }\n\n      const mousemove = function (event, d) {\n        tooltip.html('Date: ' + d.date.toISOString().substring(0, 10) + '<br>Volatility: ' + d.value.toFixed(2))\n          .style('left', (event.pageX + 10) + 'px')\n          .style('top', (event.pageY + 10) + 'px')\n      }\n\n      const mouseleave = function (event, d) {\n        tooltip.style('opacity', 0)\n        d3.select(this).style('stroke', 'none').style('opacity', 0.8)\n      }\n\n      // Add the points with tooltips for each coin\n      this.selected_coins.forEach(coin => {\n        svg.selectAll('dot')\n          .data(data.filter(d => d.coin === coin))\n          .enter().append('circle')\n          .attr('r', 5)\n          .attr('cx', d => x(d.date))\n          .attr('cy', d => y(d.value))\n          .style('fill', color(coin))\n          .on('mouseover', mouseover)\n          .on('mousemove', mousemove)\n          .on('mouseleave', mouseleave)\n      })\n    }\n\n  }\n}\n</script>\n\n<style>\n/* Add styles for your chart and tooltip */\n.tooltip {\n  position: absolute;\n  text-align: center;\n  transition: opacity 0.3s;\n}\n\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}