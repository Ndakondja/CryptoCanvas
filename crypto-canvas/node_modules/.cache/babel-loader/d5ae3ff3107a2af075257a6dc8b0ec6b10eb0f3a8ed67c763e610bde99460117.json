{"ast":null,"code":"import axios from 'axios';\nimport config from './config';\nexport default {\n  name: 'CoinStats',\n  props: {\n    selectedTimeRange: String,\n    selectedCoins: {\n      type: Array\n    }\n  },\n  mounted() {\n    this.fetchCoinStats(this.selectedTimeRange, this.selectedCoins);\n  },\n  data() {\n    return {\n      coinStats: []\n    };\n  },\n  watch: {\n    selectedTimeRange() {\n      this.fetchCoinStats(this.selectedTimeRange, this.selectedCoins);\n    },\n    selectedCoins() {\n      this.fetchCoinStats(this.selectedTimeRange, this.selectedCoins);\n    }\n  },\n  methods: {\n    async fetchCoinStats() {\n      try {\n        const response = await axios.get(`${config.backendApiUrl}/getCoinStats`, {\n          params: {\n            timeRange: this.selectedTimeRange,\n            coins: this.selectedCoins.join(',')\n          }\n        });\n        this.coinStats = response.data;\n      } catch (error) {\n        console.error('Error fetching coin stats:', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","config","name","props","selectedTimeRange","String","selectedCoins","type","Array","mounted","fetchCoinStats","data","coinStats","watch","methods","response","get","backendApiUrl","params","timeRange","coins","join","error","console"],"sources":["/Users/stefanstapelberg/Desktop/FSD_PROJECT/CryptoCanvas/crypto-canvas/src/components/CoinStats.vue"],"sourcesContent":["<template>\n    <div id=\"coin-stats\">\n      <h2>Coin Statistics</h2>\n      <table>\n        <thead>\n          <tr>\n            <th>Coin</th>\n            <th>Average Price</th>\n            <th>Standard Deviation</th>\n            <th>Percentage Growth</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"coinStat in coinStats\" :key=\"coinStat.coin\">\n            <td>{{ coinStat.coin }}</td>\n            <td>{{ coinStat.average_price.toFixed(2) }}</td>\n            <td>{{ coinStat.std_dev.toFixed(2) }}%</td>\n            <td>{{ coinStat.percentage_growth.toFixed(2) }}%</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios'\nimport config from './config'\n\nexport default {\n  name: 'CoinStats',\n  props: {\n    selectedTimeRange: String,\n    selectedCoins: {\n      type: Array\n    }\n  },\n  mounted () {\n    this.fetchCoinStats(this.selectedTimeRange, this.selectedCoins)\n  },\n  data () {\n    return {\n      coinStats: []\n    }\n  },\n  watch: {\n    selectedTimeRange () {\n      this.fetchCoinStats(this.selectedTimeRange, this.selectedCoins)\n    },\n    selectedCoins () {\n      this.fetchCoinStats(this.selectedTimeRange, this.selectedCoins)\n    }\n  },\n  methods: {\n    async fetchCoinStats () {\n      try {\n        const response = await axios.get(`${config.backendApiUrl}/getCoinStats`, {\n          params: {\n            timeRange: this.selectedTimeRange,\n            coins: this.selectedCoins.join(',')\n          }\n        })\n        this.coinStats = response.data\n      } catch (error) {\n        console.error('Error fetching coin stats:', error)\n      }\n    }\n  }\n}\n</script>\n\n<style>\n\n/* Add styling for your table here */\ntable {\n  width: 100%;\n  border-collapse: collapse;\n  background-color: rgb(154, 238, 255); /* Blue background color */\n}\n\nth, td {\n  border: 2px solid #fcfcfc; /* Darker gridlines */\n  padding: 8px;\n}\n\nth {\n  background-color: #74caea; /* Slightly darker blue for header */\n}\n\n/* Grid layout adjustments */\n.main-content-grid {\n  display: grid;\n  grid-template-columns: 1fr 1fr; /* Two equal columns */\n  grid-template-rows: auto;\n  gap: 16px; /* Adjust the gap as needed */\n}\n\n.main-content-grid > div {\n  grid-column: 1 / -1; /* Make other content span full width */\n}\n\n.main-content-grid > div:nth-child(1) {\n  display: flex;\n  flex-direction: column;\n}\n\n.coin-stats {\n  grid-column: 2; /* Place in the second column */\n  max-width: 50%; /* Half the width of the column */\n  align-self: start; /* Align to the top */\n}\n</style>\n"],"mappings":"AAyBA,OAAOA,KAAI,MAAO,OAAM;AACxB,OAAOC,MAAK,MAAO,UAAS;AAE5B,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,KAAK,EAAE;IACLC,iBAAiB,EAAEC,MAAM;IACzBC,aAAa,EAAE;MACbC,IAAI,EAAEC;IACR;EACF,CAAC;EACDC,OAAMA,CAAA,EAAK;IACT,IAAI,CAACC,cAAc,CAAC,IAAI,CAACN,iBAAiB,EAAE,IAAI,CAACE,aAAa;EAChE,CAAC;EACDK,IAAGA,CAAA,EAAK;IACN,OAAO;MACLC,SAAS,EAAE;IACb;EACF,CAAC;EACDC,KAAK,EAAE;IACLT,iBAAgBA,CAAA,EAAK;MACnB,IAAI,CAACM,cAAc,CAAC,IAAI,CAACN,iBAAiB,EAAE,IAAI,CAACE,aAAa;IAChE,CAAC;IACDA,aAAYA,CAAA,EAAK;MACf,IAAI,CAACI,cAAc,CAAC,IAAI,CAACN,iBAAiB,EAAE,IAAI,CAACE,aAAa;IAChE;EACF,CAAC;EACDQ,OAAO,EAAE;IACP,MAAMJ,cAAaA,CAAA,EAAK;MACtB,IAAI;QACF,MAAMK,QAAO,GAAI,MAAMf,KAAK,CAACgB,GAAG,CAAE,GAAEf,MAAM,CAACgB,aAAc,eAAc,EAAE;UACvEC,MAAM,EAAE;YACNC,SAAS,EAAE,IAAI,CAACf,iBAAiB;YACjCgB,KAAK,EAAE,IAAI,CAACd,aAAa,CAACe,IAAI,CAAC,GAAG;UACpC;QACF,CAAC;QACD,IAAI,CAACT,SAAQ,GAAIG,QAAQ,CAACJ,IAAG;MAC/B,EAAE,OAAOW,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK;MACnD;IACF;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}