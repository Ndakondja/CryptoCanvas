{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-6ad9d663\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"correlation-matrix\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" D3 visualization will be appended here \")]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createCommentVNode"],"sources":["/Users/zaheer/Coding/CryptoCanvas/crypto-canvas/src/components/CorrelationMatrix.vue"],"sourcesContent":["<template>\n  <div class=\"correlation-matrix\">\n    <!-- D3 visualization will be appended here -->\n  </div>\n</template>\n\n<script>\nimport * as d3 from 'd3'\n\nexport default {\n  name: 'CorrelationMatrix',\n  mounted () {\n    fetch('correlation_matrix.json')\n      .then(response => response.json())\n      .then(data => {\n        this.createCorrelationMatrix(data)\n      })\n      .catch(error => console.error('Error fetching data:', error))\n  },\n  methods: {\n    createCorrelationMatrix (data) {\n      // D3 code to create the correlation matrix\n    }\n  }\n}\n</script>\n\n<style scoped>\n.correlation-matrix {\n  width: 100%;\n  height: 400px; /* Adjust as needed */\n  /* Further styling */\n}\n</style>\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAoB;;uBAA/BC,mBAAA,CAEM,OAFNC,UAEM,GADJC,mBAAA,4CAA+C,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}