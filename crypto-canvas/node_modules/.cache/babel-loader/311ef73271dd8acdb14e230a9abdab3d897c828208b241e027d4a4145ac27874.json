{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-4df8873e\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"volatility-comparison\",\n  ref: \"volatilityChart\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, null, 512 /* NEED_PATCH */);\n}","map":{"version":3,"names":["class","ref","_createElementBlock","_hoisted_1"],"sources":["/Users/zaheer/Coding/CryptoCanvas/crypto-canvas/src/components/VolatilityComparison.vue"],"sourcesContent":["<template>\n  <div class=\"volatility-comparison\" ref=\"volatilityChart\"></div>\n</template>\n\n<script>\nimport * as d3 from 'd3';\n\nexport default {\n  name: 'VolatilityComparison',\n  mounted() {\n    fetch('volatility_comparison.json')\n      .then(response => response.json())\n      .then(rawData => {\n        console.log('Fetched data:', rawData); // Log fetched data\n        if (rawData && rawData.length) {\n          const transformedData = this.transformData(rawData);\n          this.createVolatilityComparison(transformedData);\n        } else {\n          console.error('Data is empty or not in expected format');\n        }\n      })\n      .catch(error => {\n        console.error('Error fetching data:', error);\n      });\n  },\n  methods: {\n    transformData(rawData) {\n      // Assuming rawData is an array of objects { date, name, value }\n      const groupedData = d3.groups(rawData, d => d.name)\n                           .map(([name, values]) => ({ name, values }));\n      return groupedData;\n    },\n    createVolatilityComparison(data) {\n      const margin = { top: 10, right: 30, bottom: 30, left: 50 },\n            width = 460 - margin.left - margin.right,\n            height = 400 - margin.top - margin.bottom;\n\n      const svg = d3.select(this.$refs.volatilityChart)\n        .append(\"svg\")\n          .attr(\"width\", width + margin.left + margin.right)\n          .attr(\"height\", height + margin.top + margin.bottom)\n        .append(\"g\")\n          .attr(\"transform\", `translate(${margin.left}, ${margin.top})`);\n\n      // ... rest of the D3 code to draw the chart\n    }\n  }\n};\n</script>\n\n<style scoped>\n.volatility-comparison {\n  width: 100%;\n  height: 400px;\n}\n</style>\n"],"mappings":";;;EACOA,KAAK,EAAC,uBAAuB;EAACC,GAAG,EAAC;;;uBAAvCC,mBAAA,CAA+D,OAA/DC,UAA+D"},"metadata":{},"sourceType":"module","externalDependencies":[]}