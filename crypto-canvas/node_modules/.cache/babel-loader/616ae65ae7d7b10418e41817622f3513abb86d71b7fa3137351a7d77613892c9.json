{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  id: \"coin-stats\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Quick Coin Stats\", -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"Coin\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Average Price\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Standard Deviation\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Percentage Growth\")])], -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"table\", null, [_hoisted_3, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.coinStats, coinStat => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: coinStat.coin\n    }, [_createElementVNode(\"td\", null, _toDisplayString(coinStat.coin), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(coinStat.average_price.toFixed(2)), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(coinStat.std_dev.toFixed(2)) + \"%\", 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(coinStat.percentage_growth.toFixed(2)) + \"%\", 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["id","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_Fragment","_renderList","$data","coinStats","coinStat","key","coin","_toDisplayString","average_price","toFixed","std_dev","percentage_growth"],"sources":["C:\\Projects\\CryptoCanvas\\crypto-canvas\\src\\components\\CoinStats.vue"],"sourcesContent":["<template>\r\n    <div id=\"coin-stats\">\r\n      <h2>Quick Coin Stats</h2>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Coin</th>\r\n            <th>Average Price</th>\r\n            <th>Standard Deviation</th>\r\n            <th>Percentage Growth</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"coinStat in coinStats\" :key=\"coinStat.coin\">\r\n            <td>{{ coinStat.coin }}</td>\r\n            <td>{{ coinStat.average_price.toFixed(2) }}</td>\r\n            <td>{{ coinStat.std_dev.toFixed(2) }}%</td>\r\n            <td>{{ coinStat.percentage_growth.toFixed(2) }}%</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\nimport config from './config'\r\n\r\nexport default {\r\n  name: 'CoinStats',\r\n  props: {\r\n    selectedTimeRange: String,\r\n    selectedCoins: {\r\n      type: Array\r\n    }\r\n  },\r\n  mounted () {\r\n    this.fetchCoinStats(this.selectedTimeRange, this.selectedCoins)\r\n  },\r\n  data () {\r\n    return {\r\n      coinStats: []\r\n    }\r\n  },\r\n  watch: {\r\n    selectedTimeRange () {\r\n      this.fetchCoinStats(this.selectedTimeRange, this.selectedCoins)\r\n    },\r\n    selectedCoins () {\r\n      this.fetchCoinStats(this.selectedTimeRange, this.selectedCoins)\r\n    }\r\n  },\r\n  methods: {\r\n    async fetchCoinStats () {\r\n      try {\r\n        const response = await axios.get(`${config.backendApiUrl}/getCoinStats`, {\r\n          params: {\r\n            timeRange: this.selectedTimeRange,\r\n            coins: this.selectedCoins.join(',')\r\n          }\r\n        })\r\n        this.coinStats = response.data\r\n      } catch (error) {\r\n        console.error('Error fetching coin stats:', error)\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n/* Add styling for your table here */\r\ntable {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  background-color: rgba(69, 31, 152, 0.241); /* Blue background color */\r\n}\r\n\r\nth, td {\r\n  border: 2px solid rgba(45, 19, 101, 0.111); /* Darker gridlines */\r\n  padding: 8px;\r\n}\r\n\r\nth {\r\n  background-color: rgba(69, 31, 152, 0.185); /* Slightly darker blue for header */\r\n}\r\n\r\n/* Grid layout adjustments */\r\n.main-content-grid {\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr; /* Two equal columns */\r\n  grid-template-rows: auto;\r\n  gap: 16px; /* Adjust the gap as needed */\r\n}\r\n\r\n.main-content-grid > div {\r\n  grid-column: 1 / -1; /* Make other content span full width */\r\n}\r\n\r\n.main-content-grid > div:nth-child(1) {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.coin-stats {\r\n  grid-column: 2; /* Place in the second column */\r\n  max-width: 50%; /* Half the width of the column */\r\n  align-self: start; /* Align to the top */\r\n}\r\n\r\n.statistics-container {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  /* Add more styles for positioning if necessary */\r\n}\r\n\r\n.coin-statistics {\r\n  width: 48%; /* Adjust width as necessary */\r\n  /* Adjust other styling as necessary */\r\n}\r\n\r\n.icon {\r\n  padding-right: 8px; /* Adjust spacing as necessary */\r\n}\r\n\r\n</style>\r\n"],"mappings":";;EACSA,EAAE,EAAC;AAAY;gCAClBC,mBAAA,CAAyB,YAArB,kBAAgB;gCAElBA,mBAAA,CAOQ,gB,aANNA,mBAAA,CAKK,a,aAJHA,mBAAA,CAAa,YAAT,MAAI,G,aACRA,mBAAA,CAAsB,YAAlB,eAAa,G,aACjBA,mBAAA,CAA2B,YAAvB,oBAAkB,G,aACtBA,mBAAA,CAA0B,YAAtB,mBAAiB,E;;;uBAR7BC,mBAAA,CAoBM,OApBNC,UAoBM,GAnBJC,UAAyB,EACzBH,mBAAA,CAiBQ,gBAhBNI,UAOQ,EACRJ,mBAAA,CAOQ,iB,kBANNC,mBAAA,CAKKI,SAAA,QAAAC,WAAA,CALkBC,KAAA,CAAAC,SAAS,EAArBC,QAAQ;yBAAnBR,mBAAA,CAKK;MAL8BS,GAAG,EAAED,QAAQ,CAACE;QAC/CX,mBAAA,CAA4B,YAAAY,gBAAA,CAArBH,QAAQ,CAACE,IAAI,kBACpBX,mBAAA,CAAgD,YAAAY,gBAAA,CAAzCH,QAAQ,CAACI,aAAa,CAACC,OAAO,qBACrCd,mBAAA,CAA2C,YAAAY,gBAAA,CAApCH,QAAQ,CAACM,OAAO,CAACD,OAAO,OAAM,GAAC,iBACtCd,mBAAA,CAAqD,YAAAY,gBAAA,CAA9CH,QAAQ,CAACO,iBAAiB,CAACF,OAAO,OAAM,GAAC,gB"},"metadata":{},"sourceType":"module","externalDependencies":[]}