{"ast":null,"code":"import * as d3 from 'd3';\nexport default {\n  name: 'VolatilityComparison',\n  mounted() {\n    fetch('volatility_comparison.json').then(response => response.json()).then(rawData => {\n      console.log('Fetched data:', rawData); // Log fetched data\n      if (rawData && rawData.length) {\n        const transformedData = this.transformData(rawData);\n        this.createVolatilityComparison(transformedData);\n      } else {\n        console.error('Data is empty or not in expected format');\n      }\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n    });\n  },\n  methods: {\n    transformData(rawData) {\n      // Assuming rawData is an array of objects { date, name, value }\n      const groupedData = d3.groups(rawData, d => d.name).map(([name, values]) => ({\n        name,\n        values\n      }));\n      return groupedData;\n    },\n    createVolatilityComparison(data) {\n      const margin = {\n        top: 10,\n        right: 30,\n        bottom: 30,\n        left: 50\n      };\n      const width = 460 - margin.left - margin.right;\n      const height = 400 - margin.top - margin.bottom;\n      const svg = d3.select(this.$refs.volatilityChart).append('svg').attr('width', width + margin.left + margin.right).attr('height', height + margin.top + margin.bottom).append('g').attr('transform', `translate(${margin.left}, ${margin.top})`);\n\n      // ... rest of the D3 code to draw the chart\n    }\n  }\n};","map":{"version":3,"names":["d3","name","mounted","fetch","then","response","json","rawData","console","log","length","transformedData","transformData","createVolatilityComparison","error","catch","methods","groupedData","groups","d","map","values","data","margin","top","right","bottom","left","width","height","svg","select","$refs","volatilityChart","append","attr"],"sources":["/Users/zaheer/Coding/CryptoCanvas/crypto-canvas/src/components/VolatilityComparison.vue"],"sourcesContent":["<template>\n  <div class=\"volatility-comparison\" ref=\"volatilityChart\"></div>\n</template>\n\n<script>\nimport * as d3 from 'd3'\n\nexport default {\n  name: 'VolatilityComparison',\n  mounted () {\n    fetch('volatility_comparison.json')\n      .then(response => response.json())\n      .then(rawData => {\n        console.log('Fetched data:', rawData) // Log fetched data\n        if (rawData && rawData.length) {\n          const transformedData = this.transformData(rawData)\n          this.createVolatilityComparison(transformedData)\n        } else {\n          console.error('Data is empty or not in expected format')\n        }\n      })\n      .catch(error => {\n        console.error('Error fetching data:', error)\n      })\n  },\n  methods: {\n    transformData (rawData) {\n      // Assuming rawData is an array of objects { date, name, value }\n      const groupedData = d3.groups(rawData, d => d.name)\n        .map(([name, values]) => ({ name, values }))\n      return groupedData\n    },\n    createVolatilityComparison (data) {\n      const margin = { top: 10, right: 30, bottom: 30, left: 50 }\n      const width = 460 - margin.left - margin.right\n      const height = 400 - margin.top - margin.bottom\n\n      const svg = d3.select(this.$refs.volatilityChart)\n        .append('svg')\n        .attr('width', width + margin.left + margin.right)\n        .attr('height', height + margin.top + margin.bottom)\n        .append('g')\n        .attr('transform', `translate(${margin.left}, ${margin.top})`)\n\n      // ... rest of the D3 code to draw the chart\n    }\n  }\n}\n</script>\n\n<style scoped>\n.volatility-comparison {\n  width: 100%;\n  height: 400px;\n}\n</style>\n"],"mappings":"AAKA,OAAO,KAAKA,EAAC,MAAO,IAAG;AAEvB,eAAe;EACbC,IAAI,EAAE,sBAAsB;EAC5BC,OAAMA,CAAA,EAAK;IACTC,KAAK,CAAC,4BAA4B,EAC/BC,IAAI,CAACC,QAAO,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,EAChCF,IAAI,CAACG,OAAM,IAAK;MACfC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEF,OAAO,GAAE;MACtC,IAAIA,OAAM,IAAKA,OAAO,CAACG,MAAM,EAAE;QAC7B,MAAMC,eAAc,GAAI,IAAI,CAACC,aAAa,CAACL,OAAO;QAClD,IAAI,CAACM,0BAA0B,CAACF,eAAe;MACjD,OAAO;QACLH,OAAO,CAACM,KAAK,CAAC,yCAAyC;MACzD;IACF,CAAC,EACAC,KAAK,CAACD,KAAI,IAAK;MACdN,OAAO,CAACM,KAAK,CAAC,sBAAsB,EAAEA,KAAK;IAC7C,CAAC;EACL,CAAC;EACDE,OAAO,EAAE;IACPJ,aAAYA,CAAGL,OAAO,EAAE;MACtB;MACA,MAAMU,WAAU,GAAIjB,EAAE,CAACkB,MAAM,CAACX,OAAO,EAAEY,CAAA,IAAKA,CAAC,CAAClB,IAAI,EAC/CmB,GAAG,CAAC,CAAC,CAACnB,IAAI,EAAEoB,MAAM,CAAC,MAAM;QAAEpB,IAAI;QAAEoB;MAAO,CAAC,CAAC;MAC7C,OAAOJ,WAAU;IACnB,CAAC;IACDJ,0BAAyBA,CAAGS,IAAI,EAAE;MAChC,MAAMC,MAAK,GAAI;QAAEC,GAAG,EAAE,EAAE;QAAEC,KAAK,EAAE,EAAE;QAAEC,MAAM,EAAE,EAAE;QAAEC,IAAI,EAAE;MAAG;MAC1D,MAAMC,KAAI,GAAI,GAAE,GAAIL,MAAM,CAACI,IAAG,GAAIJ,MAAM,CAACE,KAAI;MAC7C,MAAMI,MAAK,GAAI,GAAE,GAAIN,MAAM,CAACC,GAAE,GAAID,MAAM,CAACG,MAAK;MAE9C,MAAMI,GAAE,GAAI9B,EAAE,CAAC+B,MAAM,CAAC,IAAI,CAACC,KAAK,CAACC,eAAe,EAC7CC,MAAM,CAAC,KAAK,EACZC,IAAI,CAAC,OAAO,EAAEP,KAAI,GAAIL,MAAM,CAACI,IAAG,GAAIJ,MAAM,CAACE,KAAK,EAChDU,IAAI,CAAC,QAAQ,EAAEN,MAAK,GAAIN,MAAM,CAACC,GAAE,GAAID,MAAM,CAACG,MAAM,EAClDQ,MAAM,CAAC,GAAG,EACVC,IAAI,CAAC,WAAW,EAAG,aAAYZ,MAAM,CAACI,IAAK,KAAIJ,MAAM,CAACC,GAAI,GAAE;;MAE/D;IACF;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}