{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-1a786f71\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"bitcoin-halving\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" D3 visualization will be appended here \")]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createCommentVNode"],"sources":["/Users/zaheer/Coding/CryptoCanvas/crypto-canvas/src/components/BitcoinHalving.vue"],"sourcesContent":["<template>\n    <div class=\"bitcoin-halving\">\n      <!-- D3 visualization will be appended here -->\n    </div>\n  </template>\n  \n  <script>\n  import * as d3 from 'd3';\n  \n  export default {\n    name: 'BitcoinHalving',\n    mounted() {\n      fetch('bitcoin_halving_performance.json')\n        .then(response => response.json())\n        .then(data => {\n          this.createBitcoinHalvingChart(data);\n        })\n        .catch(error => console.error('Error fetching data:', error));\n    },\n    methods: {\n      createBitcoinHalvingChart(data) {\n        // D3 code to create the Bitcoin halving chart\n      }\n    }\n  };\n  </script>\n  \n  <style scoped>\n  .bitcoin-halving {\n    /* Styles for your Bitcoin halving chart */\n  }\n  </style>\n  "],"mappings":";;;EACSA,KAAK,EAAC;AAAiB;;uBAA5BC,mBAAA,CAEM,OAFNC,UAEM,GADJC,mBAAA,4CAA+C,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}