{"ast":null,"code":"import * as d3 from 'd3';\nexport default {\n  name: 'CorrelationMatrix',\n  mounted() {\n    fetch('correlation_matrix.json').then(response => response.json()).then(data => {\n      this.createCorrelationMatrix(data);\n    }).catch(error => console.error('Error fetching data:', error));\n  },\n  methods: {\n    createCorrelationMatrix(data) {\n      const margin = {\n        top: 20,\n        right: 20,\n        bottom: 20,\n        left: 20\n      };\n      const width = 400 - margin.left - margin.right;\n      const height = 400 - margin.top - margin.bottom;\n\n      // Append SVG object to the DOM\n      const svg = d3.select(this.$refs.correlationMatrix).append(\"svg\").attr(\"width\", width + margin.left + margin.right).attr(\"height\", height + margin.top + margin.bottom).append(\"g\").attr(\"transform\", `translate(${margin.left}, ${margin.top})`);\n\n      // Create scales\n      const x = d3.scaleBand().range([0, width]).domain(Object.keys(data)).padding(0.05);\n      svg.append(\"g\").attr(\"transform\", `translate(0, ${height})`).call(d3.axisBottom(x).tickSize(0)).select(\".domain\").remove();\n      const y = d3.scaleBand().range([height, 0]).domain(Object.keys(data)).padding(0.05);\n      svg.append(\"g\").call(d3.axisLeft(y).tickSize(0)).select(\".domain\").remove();\n\n      // Build color scale\n      const myColor = d3.scaleSequential().interpolator(d3.interpolateInferno).domain([0, 1]);\n\n      // Create the squares\n      svg.selectAll().data(Object.entries(data).flatMap(([key, value]) => {\n        return Object.keys(value).map(subKey => {\n          return {\n            group1: key,\n            group2: subKey,\n            value: value[subKey]\n          };\n        });\n      })).enter().append(\"rect\").attr(\"x\", d => x(d.group1)).attr(\"y\", d => y(d.group2)).attr(\"width\", x.bandwidth()).attr(\"height\", y.bandwidth()).style(\"fill\", d => myColor(d.value));\n    }\n  }\n};","map":{"version":3,"names":["d3","name","mounted","fetch","then","response","json","data","createCorrelationMatrix","catch","error","console","methods","margin","top","right","bottom","left","width","height","svg","select","$refs","correlationMatrix","append","attr","x","scaleBand","range","domain","Object","keys","padding","call","axisBottom","tickSize","remove","y","axisLeft","myColor","scaleSequential","interpolator","interpolateInferno","selectAll","entries","flatMap","key","value","map","subKey","group1","group2","enter","d","bandwidth","style"],"sources":["/Users/zaheer/Coding/CryptoCanvas/crypto-canvas/src/components/CorrelationMatrix.vue"],"sourcesContent":["<template>\n  <div class=\"correlation-matrix\" ref=\"correlationMatrix\"></div>\n</template>\n\n<script>\nimport * as d3 from 'd3';\n\nexport default {\n  name: 'CorrelationMatrix',\n  mounted() {\n    fetch('correlation_matrix.json')\n      .then(response => response.json())\n      .then(data => {\n        this.createCorrelationMatrix(data);\n      })\n      .catch(error => console.error('Error fetching data:', error));\n  },\n  methods: {\n    createCorrelationMatrix(data) {\n      const margin = { top: 20, right: 20, bottom: 20, left: 20 };\n      const width = 400 - margin.left - margin.right;\n      const height = 400 - margin.top - margin.bottom;\n\n      // Append SVG object to the DOM\n      const svg = d3.select(this.$refs.correlationMatrix)\n        .append(\"svg\")\n          .attr(\"width\", width + margin.left + margin.right)\n          .attr(\"height\", height + margin.top + margin.bottom)\n        .append(\"g\")\n          .attr(\"transform\", `translate(${margin.left}, ${margin.top})`);\n\n      // Create scales\n      const x = d3.scaleBand()\n        .range([0, width])\n        .domain(Object.keys(data))\n        .padding(0.05);\n\n      svg.append(\"g\")\n        .attr(\"transform\", `translate(0, ${height})`)\n        .call(d3.axisBottom(x).tickSize(0))\n        .select(\".domain\").remove();\n\n      const y = d3.scaleBand()\n        .range([height, 0])\n        .domain(Object.keys(data))\n        .padding(0.05);\n\n      svg.append(\"g\")\n        .call(d3.axisLeft(y).tickSize(0))\n        .select(\".domain\").remove();\n\n      // Build color scale\n      const myColor = d3.scaleSequential()\n        .interpolator(d3.interpolateInferno)\n        .domain([0, 1])\n\n      // Create the squares\n      svg.selectAll()\n        .data(Object.entries(data).flatMap(([key, value]) => {\n          return Object.keys(value).map(subKey => {\n            return { group1: key, group2: subKey, value: value[subKey] };\n          });\n        }))\n        .enter()\n        .append(\"rect\")\n          .attr(\"x\", d => x(d.group1))\n          .attr(\"y\", d => y(d.group2))\n          .attr(\"width\", x.bandwidth())\n          .attr(\"height\", y.bandwidth())\n          .style(\"fill\", d => myColor(d.value));\n    }\n  }\n};\n</script>\n\n<style scoped>\n.correlation-matrix {\n  width: 100%;\n  height: 400px;\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}