{"ast":null,"code":"import * as d3 from 'd3';\nimport axios from 'axios';\nimport config from './config';\nexport default {\n  // eslint-disable-next-line vue/multi-word-component-names\n  name: 'Volatility',\n  mounted() {\n    this.fetchVolatilityData();\n  },\n  data() {\n    return {\n      selected_coins: [],\n      // Default selected coins\n      volatilityData: null\n    };\n  },\n  watch: {\n    selectedTimeRange() {\n      this.fetchCoinStats(this.selectedTimeRange, this.selectedCoins);\n    },\n    selectedCoins() {\n      this.fetchCoinStats(this.selectedTimeRange, this.selectedCoins);\n    }\n  },\n  methods: {\n    async fetchVolatilityData() {\n      try {\n        const response = await axios.get(config.backendApiUrl.concat('/getCoinVolatilityComparisons', {\n          params: {\n            timeRange: this.selectedTimeRange,\n            coins: this.selectedCoins.join(',')\n          }\n        }));\n        this.drawVolatilityChart(response.data);\n      } catch (error) {\n        console.error('Error fetching volatility data:', error);\n      }\n    },\n    drawVolatilityChart(rawData) {\n      // Parse data and group by coin\n      const parseTime = d3.timeParse('%a, %d %b %Y %H:%M:%S GMT');\n      const data = rawData.map(d => ({\n        coin: d.Coin,\n        date: parseTime(d.Date),\n        value: +d.Volatility\n      }));\n\n      // Define dimensions and margins\n      const margin = {\n        top: 10,\n        right: 80,\n        bottom: 30,\n        left: 50\n      };\n      const width = 960 - margin.left - margin.right;\n      const height = 500 - margin.top - margin.bottom;\n\n      // Remove any existing SVG to avoid overlapping charts\n      d3.select('#volatility-chart').select('svg').remove();\n\n      // Append the svg object\n      const svg = d3.select('#volatility-chart').append('svg').attr('width', width + margin.left + margin.right).attr('height', height + margin.top + margin.bottom).append('g').attr('transform', `translate(${margin.left},${margin.top})`);\n\n      // Add X & Y scales and axes\n      const x = d3.scaleTime().range([0, width]);\n      const y = d3.scaleLinear().range([height, 0]);\n      x.domain(d3.extent(data, d => d.date));\n      y.domain([0, d3.max(data, d => d.value)]);\n\n      // Define the line generator\n      const valueline = d3.line().x(d => x(d.date)).y(d => y(d.value));\n\n      // Create a color scale\n      const color = d3.scaleOrdinal(d3.schemeCategory10);\n\n      // Add the valueline path for each coin\n      this.selected_coins.forEach(coin => {\n        svg.append('path').datum(data.filter(d => d.coin === coin)).attr('class', 'line').attr('d', valueline).style('stroke', color(coin)).style('fill', 'none');\n      });\n\n      // Add the X Axis\n      svg.append('g').attr('transform', `translate(0,${height})`).call(d3.axisBottom(x));\n\n      // Add the Y Axis\n      svg.append('g').call(d3.axisLeft(y));\n      // ...after your axes have been appended to the SVG\n\n      // Add X axis label:\n      svg.append('text').attr('text-anchor', 'end').attr('x', width / 2 + margin.left).attr('y', height + margin.top + 20).text('Months');\n\n      // Add Y axis label:\n      svg.append('text').attr('text-anchor', 'end').attr('transform', 'rotate(-90)').attr('y', -margin.left + 20).attr('x', -margin.top - height / 2 + 20).text('Volatility');\n\n      // Tooltip logic (assuming you have CSS styles defined for .tooltip)\n      const tooltip = d3.select('#volatility-chart').append('div').attr('class', 'tooltip').style('opacity', 0);\n      const mouseover = function (event, d) {\n        tooltip.transition().duration(200) // Time in milliseconds for the tooltip to become fully opaque\n        .style('opacity', 0.9); // Fully opaque\n      };\n\n      const mousemove = function (event, d) {\n        tooltip.html('Volatility: ' + d.value + '<br/>Date: ' + d3.timeFormat('%B %d, %Y')(d.date)).style('left', event.pageX + 10 + 'px') // 10px to the right of the cursor\n        .style('top', event.pageY - 10 + 'px'); // 10px above the cursor\n      };\n\n      const mouseleave = function (event, d) {\n        tooltip.transition().duration(500) // Time in milliseconds for the tooltip to become fully transparent\n        .style('opacity', 0); // Fully transparent\n      };\n\n      const legend = svg.append('g').attr('font-family', 'sans-serif').attr('font-size', 10).attr('text-anchor', 'end').selectAll('g').data(this.selected_coins.slice().reverse()) // Assuming this.selected_coins contains the list of coins\n      .enter().append('g').attr('transform', function (d, i) {\n        return 'translate(0,' + i * 20 + ')';\n      });\n\n      // Add rectangles to the legend group\n      legend.append('rect').attr('x', width - 19).attr('width', 19).attr('height', 19).attr('fill', color); // Assuming color is your d3.scaleOrdinal() for colors\n\n      // Add text labels to the legend group\n      legend.append('text').attr('x', width - 24).attr('y', 9.5).attr('dy', '0.32em').text(function (d) {\n        return d;\n      });\n\n      // Add the scatterplot points\n      svg.selectAll('dot').data(data).enter().append('circle').attr('r', 2).attr('cx', function (d) {\n        return x(d.date);\n      }).attr('cy', function (d) {\n        return y(d.value);\n      }).attr('fill', function (d) {\n        return color(d.coin);\n      }).on('mouseover', mouseover).on('mouseout', mouseleave).on('mousemove', mousemove);\n    }\n  }\n};","map":{"version":3,"names":["d3","axios","config","name","mounted","fetchVolatilityData","data","selected_coins","volatilityData","watch","selectedTimeRange","fetchCoinStats","selectedCoins","methods","response","get","backendApiUrl","concat","params","timeRange","coins","join","drawVolatilityChart","error","console","rawData","parseTime","timeParse","map","d","coin","Coin","date","Date","value","Volatility","margin","top","right","bottom","left","width","height","select","remove","svg","append","attr","x","scaleTime","range","y","scaleLinear","domain","extent","max","valueline","line","color","scaleOrdinal","schemeCategory10","forEach","datum","filter","style","call","axisBottom","axisLeft","text","tooltip","mouseover","event","transition","duration","mousemove","html","timeFormat","pageX","pageY","mouseleave","legend","selectAll","slice","reverse","enter","i","on"],"sources":["C:\\Projects\\CryptoCanvas\\crypto-canvas\\src\\components\\VolatilityComparison.vue"],"sourcesContent":["<template>\r\n  <div id=\"volatility-chart\"></div>\r\n</template>\r\n\r\n<script>\r\nimport * as d3 from 'd3'\r\nimport axios from 'axios'\r\nimport config from './config'\r\n\r\nexport default {\r\n  // eslint-disable-next-line vue/multi-word-component-names\r\n  name: 'Volatility',\r\n  mounted () {\r\n    this.fetchVolatilityData()\r\n  },\r\n  data () {\r\n    return {\r\n      selected_coins: [], // Default selected coins\r\n      volatilityData: null\r\n    }\r\n  },\r\n  watch: {\r\n    selectedTimeRange () {\r\n      this.fetchCoinStats(this.selectedTimeRange, this.selectedCoins)\r\n    },\r\n    selectedCoins () {\r\n      this.fetchCoinStats(this.selectedTimeRange, this.selectedCoins)\r\n    }\r\n  },\r\n  methods: {\r\n    async fetchVolatilityData () {\r\n      try {\r\n        const response = await axios.get(config.backendApiUrl.concat('/getCoinVolatilityComparisons', {\r\n          params: {\r\n            timeRange: this.selectedTimeRange,\r\n            coins: this.selectedCoins.join(',')\r\n          }\r\n        }))\r\n        this.drawVolatilityChart(response.data)\r\n      } catch (error) {\r\n        console.error('Error fetching volatility data:', error)\r\n      }\r\n    },\r\n    drawVolatilityChart (rawData) {\r\n      // Parse data and group by coin\r\n      const parseTime = d3.timeParse('%a, %d %b %Y %H:%M:%S GMT')\r\n      const data = rawData.map(d => ({\r\n        coin: d.Coin,\r\n        date: parseTime(d.Date),\r\n        value: +d.Volatility\r\n      }))\r\n\r\n      // Define dimensions and margins\r\n      const margin = { top: 10, right: 80, bottom: 30, left: 50 }\r\n      const width = 960 - margin.left - margin.right\r\n      const height = 500 - margin.top - margin.bottom\r\n\r\n      // Remove any existing SVG to avoid overlapping charts\r\n      d3.select('#volatility-chart').select('svg').remove()\r\n\r\n      // Append the svg object\r\n      const svg = d3.select('#volatility-chart')\r\n        .append('svg')\r\n        .attr('width', width + margin.left + margin.right)\r\n        .attr('height', height + margin.top + margin.bottom)\r\n        .append('g')\r\n        .attr('transform', `translate(${margin.left},${margin.top})`)\r\n\r\n      // Add X & Y scales and axes\r\n      const x = d3.scaleTime().range([0, width])\r\n      const y = d3.scaleLinear().range([height, 0])\r\n      x.domain(d3.extent(data, d => d.date))\r\n      y.domain([0, d3.max(data, d => d.value)])\r\n\r\n      // Define the line generator\r\n      const valueline = d3.line()\r\n        .x(d => x(d.date))\r\n        .y(d => y(d.value))\r\n\r\n      // Create a color scale\r\n      const color = d3.scaleOrdinal(d3.schemeCategory10)\r\n\r\n      // Add the valueline path for each coin\r\n      this.selected_coins.forEach(coin => {\r\n        svg.append('path')\r\n          .datum(data.filter(d => d.coin === coin))\r\n          .attr('class', 'line')\r\n          .attr('d', valueline)\r\n          .style('stroke', color(coin))\r\n          .style('fill', 'none')\r\n      })\r\n\r\n      // Add the X Axis\r\n      svg.append('g')\r\n        .attr('transform', `translate(0,${height})`)\r\n        .call(d3.axisBottom(x))\r\n\r\n      // Add the Y Axis\r\n      svg.append('g')\r\n        .call(d3.axisLeft(y))\r\n        // ...after your axes have been appended to the SVG\r\n\r\n      // Add X axis label:\r\n      svg.append('text')\r\n        .attr('text-anchor', 'end')\r\n        .attr('x', width / 2 + margin.left)\r\n        .attr('y', height + margin.top + 20)\r\n        .text('Months')\r\n\r\n      // Add Y axis label:\r\n      svg.append('text')\r\n        .attr('text-anchor', 'end')\r\n        .attr('transform', 'rotate(-90)')\r\n        .attr('y', -margin.left + 20)\r\n        .attr('x', -margin.top - height / 2 + 20)\r\n        .text('Volatility')\r\n\r\n      // Tooltip logic (assuming you have CSS styles defined for .tooltip)\r\n      const tooltip = d3.select('#volatility-chart').append('div')\r\n        .attr('class', 'tooltip')\r\n        .style('opacity', 0)\r\n\r\n      const mouseover = function (event, d) {\r\n        tooltip.transition()\r\n          .duration(200) // Time in milliseconds for the tooltip to become fully opaque\r\n          .style('opacity', 0.9) // Fully opaque\r\n      }\r\n\r\n      const mousemove = function (event, d) {\r\n        tooltip.html('Volatility: ' + d.value + '<br/>Date: ' + d3.timeFormat('%B %d, %Y')(d.date))\r\n          .style('left', (event.pageX + 10) + 'px') // 10px to the right of the cursor\r\n          .style('top', (event.pageY - 10) + 'px') // 10px above the cursor\r\n      }\r\n\r\n      const mouseleave = function (event, d) {\r\n        tooltip.transition()\r\n          .duration(500) // Time in milliseconds for the tooltip to become fully transparent\r\n          .style('opacity', 0) // Fully transparent\r\n      }\r\n      const legend = svg.append('g')\r\n        .attr('font-family', 'sans-serif')\r\n        .attr('font-size', 10)\r\n        .attr('text-anchor', 'end')\r\n        .selectAll('g')\r\n        .data(this.selected_coins.slice().reverse()) // Assuming this.selected_coins contains the list of coins\r\n        .enter().append('g')\r\n        .attr('transform', function (d, i) { return 'translate(0,' + i * 20 + ')' })\r\n\r\n      // Add rectangles to the legend group\r\n      legend.append('rect')\r\n        .attr('x', width - 19)\r\n        .attr('width', 19)\r\n        .attr('height', 19)\r\n        .attr('fill', color) // Assuming color is your d3.scaleOrdinal() for colors\r\n\r\n      // Add text labels to the legend group\r\n      legend.append('text')\r\n        .attr('x', width - 24)\r\n        .attr('y', 9.5)\r\n        .attr('dy', '0.32em')\r\n        .text(function (d) { return d })\r\n\r\n      // Add the scatterplot points\r\n      svg.selectAll('dot')\r\n        .data(data)\r\n        .enter().append('circle')\r\n        .attr('r', 2)\r\n        .attr('cx', function (d) { return x(d.date) })\r\n        .attr('cy', function (d) { return y(d.value) })\r\n        .attr('fill', function (d) { return color(d.coin) })\r\n        .on('mouseover', mouseover)\r\n        .on('mouseout', mouseleave)\r\n        .on('mousemove', mousemove)\r\n    }\r\n\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n.tooltip {\r\n  position: absolute;\r\n  text-align: center;\r\n  padding: 8px;\r\n  font: 12px sans-serif;\r\n  background: rgba(255, 255, 255, 0.8); /* Semi-transparent white background */\r\n  border: 1px solid #333; /* Solid border for contrast */\r\n  border-radius: 5px;\r\n  pointer-events: none; /* Prevents the tooltip from capturing mouse events */\r\n  z-index: 10; /* Ensures the tooltip is above other elements */\r\n}\r\n\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}