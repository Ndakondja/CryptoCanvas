{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  id: \"coin-stats\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Coin Statistics\", -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"Coin\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Average Price\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Standard Deviation\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Percentage Growth\")])], -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"table\", null, [_hoisted_3, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.coinStats, coinStat => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: coinStat.coin\n    }, [_createElementVNode(\"td\", null, _toDisplayString(coinStat.coin), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(coinStat.average_price.toFixed(2)), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(coinStat.std_dev.toFixed(2)) + \"%\", 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(coinStat.percentage_growth.toFixed(2)) + \"%\", 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["id","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_Fragment","_renderList","$data","coinStats","coinStat","key","coin","_toDisplayString","average_price","toFixed","std_dev","percentage_growth"],"sources":["/Users/stefanstapelberg/Desktop/FSD_PROJECT/CryptoCanvas/crypto-canvas/src/components/CoinStats.vue"],"sourcesContent":["<template>\n    <div id=\"coin-stats\">\n      <h2>Coin Statistics</h2>\n      <table>\n        <thead>\n          <tr>\n            <th>Coin</th>\n            <th>Average Price</th>\n            <th>Standard Deviation</th>\n            <th>Percentage Growth</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"coinStat in coinStats\" :key=\"coinStat.coin\">\n            <td>{{ coinStat.coin }}</td>\n            <td>{{ coinStat.average_price.toFixed(2) }}</td>\n            <td>{{ coinStat.std_dev.toFixed(2) }}%</td>\n            <td>{{ coinStat.percentage_growth.toFixed(2) }}%</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios'\nimport config from './config'\n\nexport default {\n  name: 'CoinStats',\n  props: {\n    selectedTimeRange: String,\n    selectedCoins: {\n      type: Array\n    }\n  },\n  mounted () {\n    this.fetchCoinStats(this.selectedTimeRange, this.selectedCoins)\n  },\n  data () {\n    return {\n      coinStats: []\n    }\n  },\n  watch: {\n    selectedTimeRange () {\n      this.fetchCoinStats(this.selectedTimeRange, this.selectedCoins)\n    },\n    selectedCoins () {\n      this.fetchCoinStats(this.selectedTimeRange, this.selectedCoins)\n    }\n  },\n  methods: {\n    async fetchCoinStats () {\n      try {\n        const response = await axios.get(`${config.backendApiUrl}/getCoinStats`, {\n          params: {\n            timeRange: this.selectedTimeRange,\n            coins: this.selectedCoins.join(',')\n          }\n        })\n        this.coinStats = response.data\n      } catch (error) {\n        console.error('Error fetching coin stats:', error)\n      }\n    }\n  }\n}\n</script>\n\n<style>\n\n/* Add styling for your table here */\ntable {\n  width: 100%;\n  border-collapse: collapse;\n  background-color: rgb(154, 238, 255); /* Blue background color */\n}\n\nth, td {\n  border: 2px solid #66c5d8; /* Darker gridlines */\n  padding: 8px;\n}\n\nth {\n  background-color: #74caea; /* Slightly darker blue for header */\n}\n\n/* Grid layout adjustments */\n.main-content-grid {\n  display: grid;\n  grid-template-columns: 1fr 1fr; /* Two equal columns */\n  grid-template-rows: auto;\n  gap: 16px; /* Adjust the gap as needed */\n}\n\n.main-content-grid > div {\n  grid-column: 1 / -1; /* Make other content span full width */\n}\n\n.main-content-grid > div:nth-child(1) {\n  display: flex;\n  flex-direction: column;\n}\n\n.coin-stats {\n  grid-column: 2; /* Place in the second column */\n  max-width: 50%; /* Half the width of the column */\n  align-self: start; /* Align to the top */\n}\n</style>\n"],"mappings":";;EACSA,EAAE,EAAC;AAAY;gCAClBC,mBAAA,CAAwB,YAApB,iBAAe;gCAEjBA,mBAAA,CAOQ,gB,aANNA,mBAAA,CAKK,a,aAJHA,mBAAA,CAAa,YAAT,MAAI,G,aACRA,mBAAA,CAAsB,YAAlB,eAAa,G,aACjBA,mBAAA,CAA2B,YAAvB,oBAAkB,G,aACtBA,mBAAA,CAA0B,YAAtB,mBAAiB,E;;;uBAR7BC,mBAAA,CAoBM,OApBNC,UAoBM,GAnBJC,UAAwB,EACxBH,mBAAA,CAiBQ,gBAhBNI,UAOQ,EACRJ,mBAAA,CAOQ,iB,kBANNC,mBAAA,CAKKI,SAAA,QAAAC,WAAA,CALkBC,KAAA,CAAAC,SAAS,EAArBC,QAAQ;yBAAnBR,mBAAA,CAKK;MAL8BS,GAAG,EAAED,QAAQ,CAACE;QAC/CX,mBAAA,CAA4B,YAAAY,gBAAA,CAArBH,QAAQ,CAACE,IAAI,kBACpBX,mBAAA,CAAgD,YAAAY,gBAAA,CAAzCH,QAAQ,CAACI,aAAa,CAACC,OAAO,qBACrCd,mBAAA,CAA2C,YAAAY,gBAAA,CAApCH,QAAQ,CAACM,OAAO,CAACD,OAAO,OAAM,GAAC,iBACtCd,mBAAA,CAAqD,YAAAY,gBAAA,CAA9CH,QAAQ,CAACO,iBAAiB,CAACF,OAAO,OAAM,GAAC,gB"},"metadata":{},"sourceType":"module","externalDependencies":[]}